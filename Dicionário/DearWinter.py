from tkinter import *
from tkinter import ttk
import socket
import os
import pickle
MAX_BYTES = 65535
dadoscons = []
dados = []
address = ('127.0.0.1', 1080)
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
def sendword(*args):
    if wordport.get().isspace() == True or wordport.get().isalpha() == False or wordport.get().islower() == False:
        resp.set("Ponha as informações corretamente")
    elif wordeng.get().isspace() == True or wordeng.get().isalpha() == False or wordeng.get().islower() == False:
        resp.set("Ponha as informações corretamente")
    elif wordjap.get().isspace() == True or wordjap.get().isalpha() == False or wordjap.get().islower() == False:
        resp.set("Ponha as informações corretamente")
    elif worddet.get().isspace() == True or worddet.get().isalpha() == False or worddet.get().islower() == False:
        resp.set("Ponha as informações corretamente")
    elif wordita.get().isspace() == True or wordita.get().isalpha() == False or wordita.get().islower() == False:
        resp.set("Ponha as informações corretamente")
    else:
        sock.sendto('adicionar'.encode('utf-8'),address)
        dataToSend = wordport.get() + " " + wordeng.get() + " " + wordjap.get() + " " + worddet.get() + " " + wordita.get()
        sock.sendto(dataToSend.encode('utf-8'),address)
        wordport.set("")
        wordeng.set("")
        wordita.set("")
        worddet.set("")
        wordjap.set("")
        resp.set("Enviado!")
def editini(*args,**kwargs):
    address = ('127.0.0.1', 1080)
    sock.sendto('editar'.encode('utf-8'),address)
    data, address = sock.recvfrom(MAX_BYTES)
    data = data.decode('utf-8')
    data = data.split(' ')
    dados.insert(0,data)
    keylist.set(data)
    editframe.tkraise()
def editseq(*args):
    address = ('127.0.0.1', 1080)
    x = listapalavras.curselection()[0]
    print(dados)
    data = dados[0][x]
    sock.sendto(data.encode('utf-8'),address)
    data,address = sock.recvfrom(MAX_BYTES)
    data = data.decode('utf-8')
    print(data)
    data = data.split(" ")
    edwordport.set(dados[0][x])
    edwordeng.set(data[0])
    edwordjap.set(data[1])
    edworddet.set(data[2])
    edwordita.set(data[3])
def sendedit(*args):
    address = ('127.0.0.1', 1080)
    word = edwordport.get() + " " + edwordeng.get() + " " + edwordjap.get() + " " + edworddet.get() + " " + edwordita.get()
    if edwordport.get() == "":
        sock.sendto(word.encode('utf-8'),address)
        data, address = sock.recvfrom(MAX_BYTES)
        data = data.decode('utf-8')
        data = data.split(" ")
        keylist.set(data)
        edwordeng.set("")
        edwordjap.set("")
        edworddet.set("")
        edwordita.set("")
        editres.set("Excluído com sucesso")
    else:
        sock.sendto(word.encode('utf-8'), address)
        data, address = sock.recvfrom(MAX_BYTES)
        data = data.decode('utf-8')
        data = data.split(" ")
        editres.set("Editado com sucesso")
def out(*args):
    sock.sendto("sair".encode('utf-8'),address)
    mainframe.tkraise()
    edwordport.set("")
    edwordeng.set("")
    edwordjap.set("")
    edworddet.set("")
    edwordita.set("")
    conswordport.set("")
    conswordeng.set("")
    conswordjap.set("")
    consworddet.set("")
    conswordita.set("")
def cons(*args):
    address = ('127.0.0.1', 1080)
    sock.sendto('consultar'.encode('utf-8'),address)
    data,address = sock.recvfrom(MAX_BYTES)
    data = data.decode("utf-8")
    data = data.split(" ")
    dadoscons.insert(0,data)
    listcons.set(data)
    consframe.tkraise()
def consres(*args):
    address = ('127.0.0.1', 1080)
    x = listaconsulta.curselection()[0]
    print(dadoscons)
    dado = dadoscons[0][x]
    print(dado)
    sock.sendto(dado.encode('utf-8'),address)
    data, address = sock.recvfrom(MAX_BYTES)
    data = data.decode('utf-8')
    data = data.split(" ")
    conswordport.set(dado)
    conswordeng.set(data[0])
    conswordjap.set(data[1])
    consworddet.set(data[2])
    conswordita.set(data[3])
root = Tk()
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-MAINFRAME-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
mainframe = ttk.Frame(root)
lbla= ttk.Label(mainframe,text="Seja bem vindo! Selecione a opção que você deseja:")
butadd= ttk.Button(mainframe,text= "Adicionar palavra",command= lambda:addframe.tkraise())
butedit= ttk.Button(mainframe,text= "Editar palavra",command=lambda: editini())
butcons = ttk.Button(mainframe,text="Consultar Palavra",command=lambda: cons())
print(butadd['style'])
mainframe.grid(column=0,row=0,sticky=(N,W,E,S))
lbla.grid(column=0,row=0,columnspan=3,sticky=(N))
butadd.grid(column=0,row=1,sticky=(W))
butedit.grid(column=1,row=1,sticky=(N,S),padx=20)
butcons.grid(column=2,row=1,sticky=E)
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ADDFRAME-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
addframe = ttk.Frame(root)
wordport = StringVar()
wordeng = StringVar()
wordjap = StringVar()
worddet = StringVar()
wordita = StringVar()
resp = StringVar()
labent = ttk.Label(addframe,text="Digite a palavra e suas respectivas traduções nas seguintes linguas\nCaso não saiba e queira editar futuramente, deixe em branco")
labport = ttk.Label(addframe,text="Português: ")
labeng = ttk.Label(addframe,text="Inglês: ")
labjap = ttk.Label(addframe,text="Japonês: ")
labdet = ttk.Label(addframe,text="Alemão: ")
labita = ttk.Label(addframe,text="Italiano: ")
entport = ttk.Entry(addframe,textvariable=wordport)
enteng = ttk.Entry(addframe,textvariable=wordeng)
entjap = ttk.Entry(addframe,textvariable=wordjap)
entdet = ttk.Entry(addframe,textvariable=worddet)
entita = ttk.Entry(addframe,textvariable=wordita)
butsend = ttk.Button(addframe,text="Enviar",command=lambda: sendword())
butsair= ttk.Button(addframe,text="Sair",command=lambda:mainframe.tkraise())
labres = ttk.Label(addframe,textvariable=resp)
addframe.grid(column=0,row=0,sticky=(N,W,E,S))
labent.grid(column=0,row=0,columnspan=3,sticky=(W,E))
labport.grid(column=0,row=1,sticky=W)
labeng.grid(column=0,row=2,sticky=W)
labjap.grid(column=0,row=3,sticky=W)
labdet.grid(column=0,row=4,sticky=W)
labita.grid(column=0,row=5,sticky=W)
entport.grid(column=0,row=1,sticky=E,padx=50)
enteng.grid(column=0,row=2,sticky=E,padx=50)
entjap.grid(column=0,row=3,sticky=E,padx=50)
entdet.grid(column=0,row=4,sticky=E,padx=50)
entita.grid(column=0,row=5,sticky=E,padx=50)
butsend.grid(column=2,row=6,sticky=(E))
butsair.grid(column=0,row=6,sticky=(W))
labres.grid(column=0,row=6,sticky=(E))
addframe.columnconfigure(0, weight=1)
addframe.rowconfigure(0, weight=1)
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-EDITFRAME-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
editframe = ttk.Frame(root)
keylist = StringVar()
edwordport = StringVar()
edwordeng = StringVar()
edwordjap = StringVar()
edworddet = StringVar()
edwordita = StringVar()
editres = StringVar()
listapalavras = Listbox(editframe,listvariable=keylist)
butToEdit = ttk.Button(editframe,text="Editar",command=editseq)
butToSend = ttk.Button(editframe,text="Enviar",command=sendedit)
butToExit = ttk.Button(editframe,text="Sair",command=lambda:out())
lbbport = ttk.Label(editframe,text="Português: ")
lbbeng = ttk.Label(editframe,text="Inglês: ")
lbbjap = ttk.Label(editframe,text="Japonês: ")
lbbdet = ttk.Label(editframe,text="Alemão: ")
lbbita = ttk.Label(editframe,text="Italiano: ")
lbbintro = ttk.Label(editframe,text="Selecione a palavra que deseja editar, clique no botão editar. Após editar,\n clique no botão enviar, caso deseje apagar uma entrada, apague o texto\n na caixa referente ao português e clique em enviar")
entrport = ttk.Entry(editframe,textvariable=edwordport)
entreng = ttk.Entry(editframe,textvariable=edwordeng)
entrjap = ttk.Entry(editframe,textvariable=edwordjap)
entrdet = ttk.Entry(editframe,textvariable=edworddet)
entrita = ttk.Entry(editframe,textvariable=edwordita)
entrres = ttk.Label(editframe,textvariable=editres)
sa = ttk.Scrollbar(editframe, orient=VERTICAL,command=listapalavras.yview)
listapalavras.configure(yscrollcommand=sa.set)
sa.grid(column=0,row=1,sticky=(E,N,S),rowspan=5)
editframe.grid(column=0,row=0,sticky=(N,W,E,S))
listapalavras.grid(column=0,row=1,rowspan=5)
lbbport.grid(column=1,row=1)
lbbeng.grid(column=1,row=2)
lbbjap.grid(column=1,row=3)
lbbdet.grid(column=1,row=4)
lbbita.grid(column=1,row=5)
entrport.grid(column=2,row=1)
entreng.grid(column=2,row=2)
entrjap.grid(column=2,row=3)
entrdet.grid(column=2,row=4)
entrita.grid(column=2,row=5)
entrres.grid(column=0,row=6,columnspan=2,sticky=(N,W,E))
butToEdit.grid(column=0,row=7,sticky=S)
butToSend.grid(column=1,row=7,sticky=(S))
butToExit.grid(column=2,row=7,sticky=S)
lbbintro.grid(column=0,row=0,columnspan=3,sticky=(W,E))
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-CONSFRAME-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
consframe = ttk.Frame(root)
listcons = StringVar()
conswordport = StringVar()
conswordeng = StringVar()
conswordjap = StringVar()
consworddet = StringVar()
conswordita = StringVar()
listaconsulta = Listbox(consframe,listvariable=listcons)
lcbport = ttk.Label(consframe,text="Português: ")
lcbeng = ttk.Label(consframe,text="Inglês: ")
lcbjap = ttk.Label(consframe,text="Japonês: ")
lcbdet = ttk.Label(consframe,text="Alemão: ")
lcbita = ttk.Label(consframe,text="Italiano: ")
conslbllis = ttk.Label(consframe,text="Selecione a palavra desejada\n na lista para consulta")
consport = ttk.Label(consframe,textvariable=conswordport)
conseng = ttk.Label(consframe,textvariable=conswordeng)
consjap = ttk.Label(consframe,textvariable=conswordjap)
consdet = ttk.Label(consframe,textvariable=consworddet)
consita = ttk.Label(consframe,textvariable=conswordita)
conslblpal = ttk.Label(consframe,text="Ou digite aqui a a palavra desejada para consulta")
consbut = ttk.Button(consframe,text="Consultar",command=lambda: consres())
butSair = ttk.Button(consframe,text="Sair",command=lambda: out())
consframe.grid(column=0,row=0,sticky=(N,W,E,S))
listaconsulta.grid(column=0,row=1,sticky=W,rowspan=5,columnspan=2)
lcbport.grid(column=7,row=0,sticky=E)
lcbeng.grid(column=7,row=1,sticky=E)
lcbjap.grid(column=7,row=2,sticky=E)
lcbdet.grid(column=7,row=3,sticky=E)
lcbita.grid(column=7,row=4,sticky=E)
consport.grid(column=8,row=0,sticky=W)
conseng.grid(column=8,row=1,sticky=W)
consjap.grid(column=8,row=2,sticky=W)
consdet.grid(column=8,row=3,sticky=W)
consita.grid(column=8,row=4,sticky=W)
consbut.grid(column=0,row=7,columnspan=2)
s = ttk.Scrollbar( consframe, orient=VERTICAL,command=listaconsulta.yview)
listaconsulta.configure(yscrollcommand=s.set)
s.grid(column=2,row=1,sticky=(W,N,S),rowspan=5)
butSair.grid(column=8,row=7,sticky=E)
mainframe.tkraise()
root.mainloop()
